@using sidekick
@using sidekick.testing.Models

@model LoginViewModel

@{
    ViewBag.Title = "Home Page";
}

<h2>Breadcrumbs</h2>
@using (var breadcrumbs = Html.BeginBreadcrumbs()) 
{
    @breadcrumbs.AddCrumb(Url.Action("Index", "Home"), "Home")
    @breadcrumbs.AddCrumb(Url.Action("About", "Home"), "Page 2", true)
}

<hr />

<h2>Alerts</h2>
@using (Html.Begin(new Alert(AlertType.Danger).Heading("Uh Oh!").Dismissible()))
{
    <p>There was an error on the page</p>
}

@using (var alert = Html.Begin(new Alert(AlertType.Success).Heading("Good Job!")))
{
    @alert.WriteBody()
}

<hr />

<h2>Modal</h2>
<button id="modal-button" class="btn btn-default">Open Modal</button>
@using (var modal = Html.Begin(new Modal("test-modal").Title("My Modal").Body("Modal Content pt 2")))
{
    using (modal.BeginBody())
    {
        <p>
            Modal content
        </p>
    }

    @modal.BuildFooter()
}

<hr />

<h2>Panel</h2>
@using (Html.Begin(new Panel().Title("My Panel").Icon("fa fa-truck"))) 
{
    <p>
        Panel content
    </p>   
}

<hr />

@*<h2>Card</h2>
@using (Html.Begin(new Card().Header("Heading", HeadingSize.H4).Title("Title", HeadingSize.H4).Subtitle("subtitle").Footer("footer")))
{
    <p class="card-text">This is the text for the card</p>
}

<hr />*@

<h2>Tab</h2>
@using (var tabs = Html.Begin(TabType.Tabs, false, true))
{
    @tabs.Tab(new Tab("Baseball", "fa fa-user", "baseball", true))
    @tabs.Tab(new Tab("Football", "fa fa-truck", "football"))
    @tabs.Tab(new Tab("Soccer", "fa fa-truck", "soccer"))
    @tabs.Tab(new Tab("Tennis", "fa fa-truck", "tennis"))
    @tabs.Tab(new Tab("Swimming", "fa fa-truck", "swimming"))

    using (tabs.BeginTab())
    {
        <p>The baseball tab</p>
    }

    using (tabs.BeginTab())
    {
        <p>The football tab</p>
    }

    using (tabs.BeginTab())
    {
        <p>The soccer tab</p>
    }

    using (tabs.BeginTab())
    {
        <p>The tennis tab</p>
    }

    using (tabs.BeginTab())
    {
        <p>The swimming tab</p>
    }
}

<hr />

<h2>Accordion</h2>
@using (var accordion = Html.BeginAccordion("test-accordion"))
{
    using (accordion.BeginPanel(new Panel("1").Title("Section 1").Color(Colors.Danger)))
    {
        <p>The content for the first section </p>
    }

    using (accordion.BeginPanel(new Panel("2").Title("Section 2")))
    {
        <p>The content for second section</p>
    }

    using (accordion.BeginPanel(new Panel("3").Title("Section 3").Color(Colors.Success)))
    {
        <p>The content for third section</p>
    }
}

<h2>Steps</h2>
@using (var steps = Html.BeginSteps())
{
    @steps.AddStep("Step 1", "fa fa-truck", "Description of the step", true)   
    @steps.AddStep("Step 2", "fa fa-briefcase", "Description of the next step", true)
    @steps.AddStep("Step 3", "fa fa-user", "Description of the last step")
}

<hr />

<h2>Input Groups</h2>
@Html.InputGroupFor(x => x.Email).HtmlAttributes(new { @placeholder = "Email Address..." }).PrependIcon("fa fa-envelope").HasLabelWithColon().HasValidation()
@Html.InputGroupFor(x => x.Email, SelectListUtils.BuildSelectList(new CustomSelectList("Option 1", "Option 1").Add("Option 2", "Option 2")), "---Select One---").HasLabelWithColon()

<h2>Datetimepicker</h2>
@Html.InputGroupFor(x => x.Email).AppendIcon("fa fa-calendar").DatetimepickerClass("datetimepicker").HasLabel().IsRequired()

<h2>Form Groups</h2>
@Html.FormGroupFor(x => x.Email, ControlType.Textbox).HtmlAttributes(new { @placeholder = "Email Address..." }).IsRequired().HelpText("This is the help text")

<h2>Text Area</h2>
@Html.FormGroupFor(x => x.Email, ControlType.TextArea).HtmlAttributes(new { @placeholder = "Enter text..." }).Rows(10).Columns(4).HelpText("This is the help text section")

<h2>Dropdowns</h2>
@Html.FormGroupFor(x => x.Email, SelectListUtils.YesNoDropdown(), "--Select One--")
<br />
@Html.FormGroupFor(x => x.Email, SelectListUtils.BuildSelectList(new CustomSelectList("Option 1", "1").Add("Option 2", "2")), "--Select One--")

<h2>Checkboxes</h2>
@Html.BuildCheckBoxFor(x => x.RememberMe, CheckboxType.Checkbox).HasLabel().IsRequired()

<h2>Labels</h2>
<div class="form-group">
    @Html.BuildLabel(Colors.Danger, "Help!")
    @Html.BuildLabel(Colors.Primary, "Good Job!")
</div>

<h2>Links</h2>
<div class="form-gorup">
    @Html.BuildActionLink("Home", "Index", "Go Home").Icon("fa fa-home").HtmlAttributes(new { @class = "btn btn-primary" }).RouteValues(new { @id = 50 })
    @Ajax.BuildActionLink("Home", "Index", "Test Link")
</div>


<h2>Validation Test</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.FormGroupFor(x => x.Email, ControlType.Textbox).HtmlAttributes(new { @placeholder = "Enter email..." }).HasLabelWithColon()
    @Html.FormGroupFor(x => x.Password, ControlType.Password).HtmlAttributes(new { @placeholder = "Enter password..." }).HasLabelWithColon()
    @Html.InputGroupFor(x => x.NoFutureDate).AppendIcon("fa fa-calendar").DatetimepickerClass("datetimepicker").HasLabelWithColon().HasValidation()
    @Html.InputGroupFor(x => x.NoPastDate).AppendIcon("fa fa-calendar").DatetimepickerClass("datetimepicker").HasLabelWithColon().HasValidation()
    @Html.BuildCheckBoxFor(x => x.RememberMe, CheckboxType.Checkbox).HasLabel().IsRequired()

    <div class="well">
        <button type="submit" class="btn btn-success">Submit</button>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $().ready(function () {
            $('#modal-button').on('click', function () {
                $('#test-modal').modal('show');
            });

            $('[data-toggle="tooltip"]').tooltip();
            $('.datetimepicker').datetimepicker();
        });
    </script>
}
